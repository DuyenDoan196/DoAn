@*@model IEnumerable<DoAn.Models.Product>*@
@using DoAn.Models;
@using PagedList.Mvc;
@model PagedList.PagedList<DoAn.Models.Product>

@helper Truncate(string input, int length)
{
    if (input.Length < length)
    {
        @input
    }
    else
    {
        @input.Substring(0, length)<text>...</text>
    }
}


@{
    ViewBag.Title = "Product";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Product</h2>

<p>
    @Html.ActionLink("Create New Product", "Create")
</p>
<table class="table" border="1">
    <tr>
        <th style="width:150px">
            @Html.DisplayNameFor(model => model.First().ID_Cat)
        </th>
        <th style="width:80px">
            @Html.DisplayNameFor(model => model.First().ID_NSX)
        </th>
        <th style="width:150px">
            @Html.DisplayNameFor(model => model.First().NameP)
        </th>
        <th style="width:90px">
            @Html.DisplayNameFor(model => model.First().Price)
        </th>
        <th style="width:400px">
            @Html.DisplayNameFor(model => model.First().Detail)
            
        </th>
        <th style="width:150px">
            @Html.DisplayNameFor(model => model.First().Img)
        </th>
        <th style="width:70px">
            @Html.DisplayNameFor(model => model.First().Quantity)
        </th>
        <th style="width:170px">
            @Html.DisplayNameFor(model => model.First().Update_at)
        </th>
        <th style="width:80px">
            @Html.DisplayNameFor(model => model.First().State)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NSX.TenNsx)
            </td>   
            <td>
                @Html.DisplayFor(modelItem => item.NameP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.Detail)*@
                @Truncate(item.Detail, 100)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.Img)*@
                <img src="@Url.Content("~/img/"+ item.Img)"/>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Update_at)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID_Product }) |
                @Html.ActionLink("Detail", "Detail", new { id = item.ID_Product }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID_Product })
            </td>
        </tr>
    }

</table>
Trang @(Model.PageCount < Model.PageNumber ? 0 :Model.PageNumber)/@Model.PageCount;
<div class="MenuTrang">
    @Html.PagedListPager(Model,Page => Url.Action("Product", new {Page = Page}))
</div>
<style>
    .MenuTrang li{
        display:inline;
    }
</style>